---
name: ci
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  schedule:
    - cron: '0 5 * * *'

jobs:
  bazel_arch:
    name: bazel arch latest
    runs-on: ubuntu-latest
    container: archlinux:latest
    steps:
      - name: pre-checkout setup
        run: |
          pacman --noconfirm -S -u -y
          pacman --noconfirm -S \
            ca-certificates \
            git
          rm -rf \
            /var/cache/pacman/pkg/* \
            /var/lib/pacman/sync/*
        shell: bash
      - name: checkout
        uses: actions/checkout@v2
      - name: post-checkout setup
        run: |
          pacman --noconfirm -S -y \
            bazel \
            gcc \
            jdk-openjdk \
            python \
            which
          rm -rf \
            /var/cache/pacman/pkg/* \
            /var/lib/pacman/sync/*
        shell: bash
      - name: build test package
        run: bazel test ...
        shell: bash

  bazel_macos:
    name: bazel macos latest
    runs-on: macos-latest
    steps:
      - name: checkout
        uses: actions/checkout@v2
      - name: setup
        run: |
          rm -f /usr/local/bin/2to3
          brew update
          brew uninstall -q bazelisk
          brew bundle install --no-lock
        shell: zsh -efuo pipefail {0}
      - name: build test package
        run: bazel test ...
        shell: zsh -efuo pipefail {0}

  bazel_ubuntu:
    name: bazel ubuntu latest
    runs-on: ubuntu-latest
    container: ubuntu:latest
    steps:
      - name: pre-checkout setup
        run: |
          export DEBIAN_FRONTEND=noninteractive
          apt-get update -qq
          apt-get install -o Dpkg::Use-Pty=0 -qq --no-install-recommends \
            ca-certificates \
            git
          rm -rf /var/lib/apt/lists/*
        shell: bash
      - name: checkout
        uses: actions/checkout@v2
      - name: post-checkout setup
        run: |
          export DEBIAN_FRONTEND=noninteractive
          apt-get update -qq
          apt-get install -o Dpkg::Use-Pty=0 -qq --no-install-recommends \
            default-jdk \
            gnupg \
            python-is-python3
          export APT_KEY_DONT_WARN_ON_DANGEROUS_USAGE=1
          apt-key adv -q --fetch-keys https://bazel.build/bazel-release.pub.gpg
          echo 'deb [arch=amd64] https://storage.googleapis.com/bazel-apt stable jdk1.8' \
            > /etc/apt/sources.list.d/bazel.list
          apt-get update -qq
          apt-get install -o Dpkg::Use-Pty=0 -qq --no-install-recommends bazel
          rm -rf /var/lib/apt/lists/*
        shell: bash
      - name: build test package
        run: bazel test ...
        shell: bash

  cmake_alpine:
    name: cmake alpine latest
    runs-on: ubuntu-latest
    container: alpine:latest
    steps:
      - name: pre-checkout setup
        run: |
          apk add --no-cache \
            ca-certificates \
            git
        shell: sh
      - name: checkout
        uses: actions/checkout@v2
      - name: post-checkout setup
        run: |
          apk add --no-cache \
            cmake \
            make \
            openjdk11
        shell: sh
      - name: build test package
        run: |
          mkdir _build
          cd _build
          cmake \
            -DBUILD_DOCUMENTATION:BOOL=ON \
            -DBUILD_TESTING:BOOL=ON \
            -DCMAKE_INSTALL_PREFIX:PATH=${GITHUB_WORKSPACE}/_build/install \
            -DWARNINGS_AS_ERRORS:BOOL=ON \
            --warn-uninitialized \
            ..
          cmake --build .
          ctest .
          cmake --install .
          cpack -G TGZ
          cpack -G TGZ --config CPackSourceConfig.cmake
        env:
          JAVA_HOME: /usr/lib/jvm/java-11-openjdk
        shell: sh

  cmake_arch:
    name: cmake arch latest
    runs-on: ubuntu-latest
    container: archlinux:latest
    steps:
      - name: pre-checkout setup
        run: |
          pacman --noconfirm -S -u -y
          pacman --noconfirm -S \
            ca-certificates \
            git
          rm -rf \
            /var/cache/pacman/pkg/* \
            /var/lib/pacman/sync/*
        shell: bash
      - name: checkout
        uses: actions/checkout@v2
      - name: post-checkout setup
        run: |
          pacman --noconfirm -S -y \
            cmake \
            jdk-openjdk \
            make
          rm -rf \
            /var/cache/pacman/pkg/* \
            /var/lib/pacman/sync/*
        shell: bash
      - name: build test package
        run: |
          mkdir _build
          cd _build
          cmake \
            -DBUILD_DOCUMENTATION:BOOL=ON \
            -DBUILD_TESTING:BOOL=ON \
            -DCMAKE_INSTALL_PREFIX:PATH=${GITHUB_WORKSPACE}/_build/install \
            -DWARNINGS_AS_ERRORS:BOOL=ON \
            --warn-uninitialized \
            ..
          cmake --build .
          ctest .
          cmake --install .
          cpack -G TGZ
          cpack -G TGZ --config CPackSourceConfig.cmake
        shell: bash

  cmake_centos:
    name: cmake centos latest
    runs-on: ubuntu-latest
    container: centos:latest
    steps:
      - name: pre-checkout setup
        run: |
          dnf install -q -y \
            ca-certificates \
            glibc-langpack-en \
            git
        shell: bash
      - name: checkout
        uses: actions/checkout@v2
      - name: post-checkout setup
        run: |
          dnf install -q -y \
            cmake \
            java-11-openjdk-devel \
            make \
            redhat-lsb-core \
            rpm-build
        shell: bash
      - name: build test package
        run: |
          mkdir _build
          cd _build
          cmake \
            -DBUILD_DOCUMENTATION:BOOL=ON \
            -DBUILD_TESTING:BOOL=ON \
            -DCMAKE_INSTALL_PREFIX:PATH=${GITHUB_WORKSPACE}/_build/install \
            -DWARNINGS_AS_ERRORS:BOOL=ON \
            --warn-uninitialized \
            ..
          cmake --build .
          ctest .
          cmake --install .
          cpack -G RPM
          cpack -G RPM --config CPackSourceConfig.cmake
        shell: bash

  cmake_macos:
    name: cmake macos latest
    runs-on: macos-latest
    steps:
      - name: checkout
        uses: actions/checkout@v2
      - name: setup
        run: |
          rm -f /usr/local/bin/2to3
          brew update
          brew uninstall -q bazelisk
          brew bundle install --no-lock
        shell: zsh -efuo pipefail {0}
      - name: build test package
        run: |
          mkdir _build
          cd _build
          cmake \
            -DBUILD_DOCUMENTATION:BOOL=ON \
            -DBUILD_TESTING:BOOL=ON \
            -DCMAKE_INSTALL_PREFIX:PATH=${GITHUB_WORKSPACE}/_build/install \
            -DWARNINGS_AS_ERRORS:BOOL=ON \
            --warn-uninitialized \
            ..
          cmake --build .
          ctest .
          cmake --install .
          cpack -G TGZ
          cpack -G TGZ --config CPackSourceConfig.cmake
        shell: zsh -efuo pipefail {0}

  cmake_ubuntu:
    name: cmake ubuntu latest
    runs-on: ubuntu-latest
    container: ubuntu:latest
    steps:
      - name: pre-checkout setup
        run: |
          export DEBIAN_FRONTEND=noninteractive
          apt-get update -qq
          apt-get install -o Dpkg::Use-Pty=0 -qq --no-install-recommends \
            ca-certificates \
            git
          rm -rf /var/lib/apt/lists/*
        shell: bash
      - name: checkout
        uses: actions/checkout@v2
      - name: post-checkout setup
        run: |
          export DEBIAN_FRONTEND=noninteractive
          apt-get update -qq
          apt-get install -o Dpkg::Use-Pty=0 -qq --no-install-recommends \
            default-jdk \
            gnupg \
            lsb-release \
            make
          export APT_KEY_DONT_WARN_ON_DANGEROUS_USAGE=1
          apt-key adv -q --fetch-keys \
            https://apt.kitware.com/keys/kitware-archive-latest.asc
          echo "deb https://apt.kitware.com/ubuntu/ $(lsb_release -cs) main" \
            > /etc/apt/sources.list.d/kitware.list
          apt-get update -qq
          apt-get install -o Dpkg::Use-Pty=0 -qq --no-install-recommends cmake
          rm -rf /var/lib/apt/lists/*
        shell: bash
      - name: build test package
        run: |
          mkdir _build
          cd _build
          cmake \
            -DBUILD_DOCUMENTATION:BOOL=ON \
            -DBUILD_TESTING:BOOL=ON \
            -DCMAKE_INSTALL_PREFIX:PATH=${GITHUB_WORKSPACE}/_build/install \
            -DWARNINGS_AS_ERRORS:BOOL=ON \
            --warn-uninitialized \
            ..
          cmake --build .
          ctest .
          cmake --install .
          cpack -G DEB
          cpack -G DEB --config CPackSourceConfig.cmake
        shell: bash

  cmake_windows:
    name: cmake windows latest
    runs-on: windows-latest
    steps:
      - name: checkout
        uses: actions/checkout@v2
      - name: setup
        run: |
          cup cmake.install -r -y --install-arguments=ADD_CMAKE_TO_PATH=System `
            --no-progress
        shell: powershell
      - name: build test package
        run: |
          mkdir _build
          cd _build
          cmake `
            -DBUILD_DOCUMENTATION:BOOL=ON `
            -DBUILD_TESTING:BOOL=ON `
            -DCMAKE_INSTALL_PREFIX:PATH=$Env:GITHUB_WORKSPACE\_build\install `
            -DWARNINGS_AS_ERRORS:BOOL=ON `
            --warn-uninitialized `
            ..
          cmake --build . --config Release
          ctest . --build-config Release
          cmake --install . --config Release
          cpack -C Release -G ZIP
          cpack -C Release -G ZIP --config CPackSourceConfig.cmake
        shell: powershell

  gradle_alpine:
    name: gradle alpine latest
    runs-on: ubuntu-latest
    container: alpine:latest
    steps:
      - name: pre-checkout setup
        run: |
          apk add --no-cache \
            ca-certificates \
            git
        shell: sh
      - name: checkout
        uses: actions/checkout@v2
      - name: post-checkout setup
        run: |
          apk add --no-cache \
            openjdk11
        shell: sh
      - name: cache
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: alpine-gradle-${{ hashFiles('**/*.gradle*') }}
          restore-keys: alpine-gradle-
      - name: build package
        run: ./gradlew build
        env:
          JAVA_HOME: /usr/lib/jvm/java-11-openjdk
        shell: sh

  gradle_arch:
    name: gradle arch latest
    runs-on: ubuntu-latest
    container: archlinux:latest
    steps:
      - name: pre-checkout setup
        run: |
          pacman --noconfirm -S -u -y
          pacman --noconfirm -S \
            ca-certificates \
            git
          rm -rf \
            /var/cache/pacman/pkg/* \
            /var/lib/pacman/sync/*
        shell: bash
      - name: checkout
        uses: actions/checkout@v2
      - name: post-checkout setup
        run: |
          pacman --noconfirm -S -y \
            jdk-openjdk \
            which
          rm -rf \
            /var/cache/pacman/pkg/* \
            /var/lib/pacman/sync/*
        shell: bash
      - name: cache
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: arch-gradle-${{ hashFiles('**/*.gradle*') }}
          restore-keys: arch-gradle-
      - name: build package
        run: ./gradlew build
        shell: bash

  gradle_centos:
    name: gradle centos latest
    runs-on: ubuntu-latest
    container: centos:latest
    steps:
      - name: pre-checkout setup
        run: |
          dnf install -q -y \
            ca-certificates \
            glibc-langpack-en \
            git
        shell: bash
      - name: checkout
        uses: actions/checkout@v2
      - name: post-checkout setup
        run: |
          dnf install -q -y \
            java-11-openjdk-devel \
            which
        shell: bash
      - name: cache
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: centos-gradle-${{ hashFiles('**/*.gradle*') }}
          restore-keys: centos-gradle-
      - name: build package
        run: ./gradlew build
        shell: bash

  gradle_macos:
    name: gradle macos latest
    runs-on: macos-latest
    steps:
      - name: checkout
        uses: actions/checkout@v2
      - name: setup
        run: |
          rm -f /usr/local/bin/2to3
          brew update
          brew uninstall -q bazelisk
          brew bundle install --no-lock
        shell: zsh -efuo pipefail {0}
      - name: cache
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: macos-gradle-${{ hashFiles('**/*.gradle*') }}
          restore-keys: macos-gradle-
      - name: build package
        run: ./gradlew build
        shell: zsh -efuo pipefail {0}

  gradle_ubuntu:
    name: gradle ubuntu latest
    runs-on: ubuntu-latest
    container: ubuntu:latest
    steps:
      - name: pre-checkout setup
        run: |
          export DEBIAN_FRONTEND=noninteractive
          apt-get update -qq
          apt-get install -o Dpkg::Use-Pty=0 -qq --no-install-recommends \
            ca-certificates \
            git
          rm -rf /var/lib/apt/lists/*
        shell: bash
      - name: checkout
        uses: actions/checkout@v2
      - name: post-checkout setup
        run: |
          export DEBIAN_FRONTEND=noninteractive
          apt-get update -qq
          apt-get install -o Dpkg::Use-Pty=0 -qq --no-install-recommends \
            default-jdk
          rm -rf /var/lib/apt/lists/*
        shell: bash
      - name: cache
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ubuntu-gradle-${{ hashFiles('**/*.gradle*') }}
          restore-keys: ubuntu-gradle-
      - name: build package
        run: ./gradlew build
        shell: bash

  gradle_windows:
    name: gradle windows latest
    runs-on: windows-latest
    steps:
      - name: checkout
        uses: actions/checkout@v2
      - name: cache
        uses: actions/cache@v2
        with:
          path: |
            ~\.gradle/caches
            ~\.gradle/wrapper
          key: windows-gradle-${{ hashFiles('**/*.gradle*') }}
          restore-keys: windows-gradle-
      - name: build package
        run: gradlew.bat build
        shell: cmd
